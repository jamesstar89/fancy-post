// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TypeHere Should render 1`] = `
<TypeHere
  preview={[Function]}
>
  <div>
    <ForwardRef
      debounceTimeout={300}
      minLength={2}
      onChange={[Function]}
      placeholder="Type something"
      type="text"
    >
      <StyledComponent
        debounceTimeout={300}
        forwardedClass={
          Object {
            "$$typeof": Symbol(react.forward_ref),
            "DebounceInput": [Function],
            "attrs": undefined,
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": true,
              "lastClassName": "cCuXgX",
              "rules": Array [
                "
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  -o-appearance: none;
  appearance: none;
  border: 0;
  background: none;
  color: white;
  font-size: 70px;
  outline: 0;
  width: 100%;
  overflow: hidden;
  resize: none;
  position: absolute;
  top: 0;
  left: 10px;
  z-index: 10;
  line-height: 0;

  &::placeholder {
    color: rgba(255, 255, 255, 0.2);
  }
",
              ],
            },
            "displayName": "Styled(DebounceInput)",
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": [Function],
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
            Symbol(Symbol.hasInstance): [Function],
          }
        }
        forwardedRef={null}
        minLength={2}
        onChange={[Function]}
        placeholder="Type something"
        type="text"
      >
        <DebounceInput
          className="sc-bwzfXH cCuXgX"
          debounceTimeout={300}
          element="input"
          forceNotifyByEnter={true}
          forceNotifyOnBlur={true}
          minLength={2}
          onChange={[Function]}
          placeholder="Type something"
          type="text"
        >
          <input
            className="sc-bwzfXH cCuXgX"
            onBlur={[Function]}
            onChange={[Function]}
            onKeyDown={[Function]}
            placeholder="Type something"
            type="text"
            value=""
          />
        </DebounceInput>
      </StyledComponent>
    </ForwardRef>
    <Preview>
      <div />
    </Preview>
  </div>
</TypeHere>
`;
